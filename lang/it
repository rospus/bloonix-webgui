word.Language: Language
word.Settings: Settings
word.debug: Debug
word.Preset: Preset
word.From: From
word.To: To
word.yes: yes
word.no: no
word.Yes: Yes
word.No: No
word.Hosts: Hosts
word.Services: Services
word.Absolute: Absolute
word.Relative: Relative
word.Filter: Filter
word.inactive: inactive
word.active: active
word.Timezone: Timezone
word.Timeslice: Timeslice
word.Type: Type
word.Days: Days
word.days: days
word.day: day
word.Hours: Hours
word.hours: hours
word.hour: hour
word.Minutes: Minutes
word.minutes: minutes
word.minute: minute
word.Seconds: Seconds
word.seconds: seconds
word.second: second
word.resize: Resize
word.Message: Message

nav.main.dashboard: DASHBOARD
nav.main.monitoring: MONITORING
nav.main.notifications: NOTIFICATIONS
nav.main.administration: ADMINISTRATION
nav.main.report: REPORT
nav.main.help: HELP
nav.sub.hosts: Hosts
nav.sub.services: Services
nav.sub.charts: Charts
nav.sub.templates: Templates
nav.sub.registration: Registration
nav.sub.screen: Screen
nav.sub.contacts: Contacts
nav.sub.contactgroups: Contactgroups
nav.sub.timeperiods: Timeperiods
nav.sub.rosters: Rosters
nav.sub.users: Users
nav.sub.groups: Groups
nav.sub.companies: Companies
nav.sub.variables: Variables
nav.sub.locations: Locations
nav.sub.events: Events
nav.sub.reports: Reports
nav.sub.dependencies: Dependencies
nav.sub.downtimes: Scheduled downtimes
nav.sub.mtr: MTR
nav.sub.notifications: Notifications
nav.sub.group_settings: Group settings
nav.sub.host_group_settings: Host group settings
nav.sub.user_group_settings: User group settings
nav.sub.contactgroup_settings: Contact group settings
nav.sub.contactgroup_members: Contacts in contact group
nav.sub.contactgroup_host_members: Hosts in contact group
nav.sub.contactgroup_service_members: Services in contact group

err-400: Bad login! Try it again!
err-405: Your session is expired!
err-410: The requested URL was not found!
err-411: The service is not available!
err-412: The maximum number of allowed hosts in register queue exceeded!
err-413: Host registrations for company id 1 are not allowed!
err-415: Unauthorized access!
err-416: You do not have enough access privileges for this operation!
err-417: You do not have enough privileges to create an object!
err-418: You do not have enough privileges to modify the objects!
err-419: You do not have enough privileges to delete the objects!
err-420: The action failed!
err-425: Your session token is expired!
err-426: This action requires a token!
err-427: Services that are inherited from a host template can't be deleted!
err-428: The location cannot be deleted because at least one service has the location configured!
err-500: An internal error occured! Please contact the administrator!
err-600: The object you requested does not exist!
err-601: The objects you requested does not exist!
err-605: Please select at least one object!
err-610: Please fill in the red marked fields correctly!
err-620: This object already exists!
err-630: Invalid parameter settings found!
err-631: The parameter offset must be an numeric value, min 0.
err-632: The parameter limit must be an numeric value, min 0, max <b>%s</b>.
err-633: The parameter sort_by must begin with a character of a-z and only characters from a-z, 0-9 and a underscore are allowed. The maximum length is 63 characters.
err-634: For the parameter sort_type only "asc" or "desc" is allowed as value.
err-640: No data available!
err-700: Please change your password!
err-701: Incorrect password!
err-702: The new password is to long (max 128 signs)!
err-703: The new password is to short (min 8 signs)!
err-704: The passwords doesn't match!
err-705: The new and the old password cannot be the same!
err-802: Sorry, but this feature is not available!
err-810: Sorry, but you cannot add more than %s dashlets to a dashboard!
err-811: Sorry, but you cannot create more than %s dashboards!
err-815: Sorry, but you cannot create more than %s charts!
err-816: Sorry, but you cannot add more than %s metrics to a chart!
err-817: Sorry, but you cannot create more than %s chart views!
err-821: Sorry, but you cannot create more than %s host downtimes!
err-823: Sorry, but you cannot create more than %s host downtimes for host id %s!
err-825: Sorry, but you cannot create more than %s host templates!
err-826: Sorry, but you cannot create more than %s services per template!
err-827: Sorry, but you cannot create more than %s services for template id %s!
err-831: Sorry, but you cannot create more than %s hosts!
err-832: Sorry, but you cannot create more than %s services!
err-833: Sorry, but you cannot create more than %s services per host!
err-834: Sorry, but you cannot create more than %s services for host id %s!
err-835: Sorry, but you cannot create more than %s contacts!
err-836: Sorry, but you cannot create more than %s contact groups!
err-840: Sorry, but you cannot create more than %s timeperiods!
err-841: Sorry, but you cannot create more than %s timeslices per object!
err-845: Sorry, but you cannot create more than %s groups!
err-846: Sorry, but you cannot create more than %s users!
err-847: Sorry, but you cannot create more than %s dependencies per host!

action.action: Action
action.create: Create
action.update: Update
action.settings: Settings
action.view: View
action.overview: Overview
action.edit: Edit
action.delete: Delete
action.submit: Submit
action.cancel: Cancel
action.clear: Clear
action.close: Close
action.abort: Abort
action.clone: Clone
action.reload: Reload
action.resize: Resize
action.list: List
action.login: Login
action.logout: Logout
action.move_box: Move the box
action.genstr: Generate string
action.schedule: Schedule
action.members: List members
action.timeslices: List timeslices
action.add: Add
action.remove: Remove
action.generate: Generate
action.help: Help
action.search: Search
action.quicksearch: Quick search
action.extsearch: Extended search
action.filter: Filter
action.refresh: Refresh
action.replace: Replace
action.configure: Configure
action.yes_delete: <b>Yes, delete!</b>
action.yes_remove: <b>Yes, remove!</b>
action.no_abort: <b>No, abort!</b>
action.show_selected_objects: Show selected objects
action.display_from_to_rows: Displaying <b>%s</b>-<b>%s</b> of <b>%s</b> hits
action.view_selected_objects: View selected objects
action.select: Select
action.unselect: Unselect
action.operate_as: Operate as
action.generate_string: Generate a random string
action.redirect: Redirect
action.save: Save

bool.yesno.0: no
bool.yesno.1: yes

info.no_chart_data: There are no chart data available.
info.go-back: Go back
info.this-year: This year
info.last-year: Last year
info.add-further-options: Add further options
info.update_success: The update was successful!
info.update_failed: The update was not successful!
info.create_success: The creation was successful!
info.create_failed: The creation was not successful!
info.search_syntax: <p><b>Search syntax:</b></p>
 <p>planet <i>AND</i> mars</p>
 <p>mars <i>OR</i> pluto</p>
 <p>planet <i>AND</i> mars <i>OR</i> pluto</p>
info.extended_search_syntax_for_hosts: <p>It's possible to filter the host list by a search query. The syntax is very simple and looks like:</p>
 <pre>key:value</pre>
 <p>The key is the table field to search for the value.</p>
 <p>Search examples:</p>
 <p>- Search for hosts in status CRITICAL or UNKNOWN</p>
 <pre>status:CRITICAL OR status:UNKNOWN</pre>
 <p>- Search for hosts in datacenter 12 with status CRITICAL</p>
 <pre>location:"Datacenter 12" AND status:CRITICAL</pre>
 <p>The following keys are available to search for specific fields:</p>
info.move_with_mouse: Press and hold down the left mouse button while you move the box up or down.</p>
info.new_version: <h4>A new version is available</h4>
 <p>A new version of the Bloonix-WebGUI is available!</p>
 <p>Please reload the website!</p>
info.hosts_ready_for_registration: Hosts ready for registration

text.dashlet_width: Dashlet width
text.dashlet_height: Dashlet height
text.show_legend: Show legend
text.change_nav_to_horizontal: Move navigation to the top
text.change_nav_to_vertical: Move navigation to the left
text.radial_graph: Radial graph
text.hypertree: Hypertree
text.plugin: Plugin
text.command: Command
text.selected_objects: Selected objects
text.min_length: Min length: <b>%s</b>
text.max_length: Max length: <b>%s</b>
text.min_value: Min value: <b>%s</b>
text.max_value: Max value: <b>%s</b>
text.range_value: Range: %s - %s
text.unlimited: Unlimited
text.undefined: Undefined
text.inherited_from_host: Inherited from the host
text.never: Never
text.click_me: Click me
text.click_to_delete_seletion: Click to delete the selection
text.browsers_heap_size: Display of the heap size in your browser
text.selected_locations_counter: You have <b>%s</b> checkpoints selected.
text.selected_locations_costs: Please note that each checkpoint will be charged extra.
text.sort_by_dots: Sort by ...
text.filter_by_category_dots: Filter by category ...
text.option_examples: Option examples
text.services: services
text.thresholds: Thresholds
text.plugin_info: Plugin information
text.chart_info: Chart information
text.fixed_checkpoint: Fixed checkpoint
text.first_failover_checkpoint: First failover checkpoint
text.second_failover_checkpoint: Second failover checkpoint
text.change_your_password: Change your password
text.change_the_language: Change the language
text.please_select_objects: Please select at least one object!
text.default: Default
text.satellite_hostname: Satellite hostname: %s
text.target_ip: Target IP address: %s
text.from_now_to_1h: From now + 1 hour
text.from_now_to_2h: From now + 2 hours
text.from_now_to_4h: From now + 4 hours
text.from_now_to_8h: From now + 8 hours
text.from_now_to_12h: From now + 12 hours
text.from_now_to_16h: From now + 16 hours
text.from_now_to_20h: From now + 20 hours
text.from_now_to_1d: From now + 1 day
text.from_now_to_2d: From now + 2 days
text.from_now_to_4d: From now + 4 days
text.from_now_to_7d: From now + 7 days
text.from_now_to_14d: From now + 14 days
text.last_30d: Last 30 days
text.last_60d: Last 60 days
text.last_90d: Last 90 days
text.last_180d: Last 180 days
text.report.title.host_from_to: Report for host <b>%s</b> from <b>%s</b> to <b>%s</b>
text.report.title.total_availability: The total service availability
text.report.title.number_of_events: The total number of events
text.report.title.total_status_duration: The total service status duration
text.report.title.number_of_events_by_duration: Number of events by duration
text.report.title.number_of_events_by_tags: Number of events by tags
text.report.title.status_duration_by_hour: Status duration by time range
text.report.title.no_data: For the following services are no data available in this time range
text.report.service_has_a_availabilty_of: Service <b>%s</b> has a availability of
text.report.availability.detailed_report_onclick: Click on a service to get a detailed availabilty report.
text.report.availability.Service: Click on the service to get a detailed availabilty report.
text.report.availability.Availability: The total availability.
text.report.availability.AV-O: Time slice in percent in which the service was in status OK.
text.report.availability.AV-I: Time slice in percent in which the service was in status INFO.
text.report.availability.AV-W: Time slice in percent in which the service was in status WARNING.
text.report.availability.AV-C: Time slice in percent in which the service was in status CRITICAL.
text.report.availability.AV-U: Time slice in percent in which the service was in status UNKNOWN.
text.report.availability.Events: Number of total events.
text.report.availability.EV-O: Number of events with status OK.
text.report.availability.EV-I: Number of events with status INFO.
text.report.availability.EV-W: Number of events with status WARNING.
text.report.availability.EV-C: Number of events with status CRITICAL.
text.report.availability.EV-U: Number of events with status UNKNOWN.
text.report.availability.EV-LT15: Number of events with a status duration less than 15 minutes.
text.report.availability.EV-LT30: Number of events with a status duration less than 30 minutes.
text.report.availability.EV-LT60: Number of events with a status duration less than 60 minutes.
text.report.availability.EV-LT180: Number of events with a status duration less than 3 hours.
text.report.availability.EV-LT300: Number of events with a status duration less than 5 hours.
text.report.availability.EV-GE300: Number of events with a status duration greater than 5 hours.
text.report.availability.LT15: Filter events with a status duration less than 15 minutes.
text.report.availability.LT30: Filter events with a status duration less than 30 minutes.
text.report.availability.LT60: Filter events with a status duration less than 60 minutes.
text.report.availability.LT180: Filter events with a status duration less than 3 hours.
text.report.availability.LT300: Filter events with a status duration less than 5 hours.
text.report.availability.GE300: Filter events with a status duration greater than 5 hours.
text.report.availability.lt15: Between 0 and 15 minutes
text.report.availability.lt30: Between 15 and 30 minutes
text.report.availability.lt60: Between 30 and 60 minutes
text.report.availability.lt180: Between 1 and 3 hours
text.report.availability.lt300: Between 3 and 5 hours
text.report.availability.ge300: Longer than 3 hours
text.report.availability.flapping: Flapping
text.report.availability.volatile: Volatile
text.report.availability.timeout: Timeout
text.report.availability.agent_dead: Agent dead
text.report.availability.security: Security issue
text.report.availability.fatal: Fatal issue
text.report.availability.h00: 00:00 - 00:59
text.report.availability.h01: 01:00 - 01:59
text.report.availability.h02: 02:00 - 02:59
text.report.availability.h03: 03:00 - 03:59
text.report.availability.h04: 04:00 - 04:59
text.report.availability.h05: 05:00 - 05:59
text.report.availability.h06: 06:00 - 06:59
text.report.availability.h07: 07:00 - 07:59
text.report.availability.h08: 08:00 - 08:59
text.report.availability.h09: 09:00 - 09:59
text.report.availability.h10: 10:00 - 10:59
text.report.availability.h11: 11:00 - 11:59
text.report.availability.h12: 12:00 - 12:59
text.report.availability.h13: 13:00 - 13:59
text.report.availability.h14: 14:00 - 14:59
text.report.availability.h15: 15:00 - 15:59
text.report.availability.h16: 16:00 - 16:59
text.report.availability.h17: 17:00 - 17:59
text.report.availability.h18: 18:00 - 18:59
text.report.availability.h19: 19:00 - 19:59
text.report.availability.h20: 20:00 - 20:59
text.report.availability.h21: 21:00 - 21:59
text.report.availability.h22: 22:00 - 22:59
text.report.availability.h23: 23:00 - 23:59
text.dashboard.title: Dashboard
text.dashboard.choose_content_box: Select a dashlet
text.dashboard.replace_dashlet: Replace the dashlet
text.dashboard.remove_dashlet: Remove the dashlet
text.dashboard.hosts_availability: Availability of all hosts
text.dashboard.dashlet_configuration: Dashlet configuration
text.dashboard.dashlet_select_chart_title: Select a chart for the dashlet.
text.dashboard.dashlet_select_chart: Select a chart
text.dashboard.reconfigure_dashlet: Configure dashlet
text.dashboard.services_availability: Availability of all services
text.dashboard.services_notification: Notification status of all services
text.dashboard.services_flapping: Flapping
text.dashboard.services_downtimes: Downtimes
text.dashboard.services_acknowledged: Acknowledged
text.dashboard.num_services_flapping: %s services are flapping
text.dashboard.num_services_downtime: %s services with downtime
text.dashboard.num_services_acknowledged: %s services are acknowledged
text.dashboard.one_service_flapping: %s service is flapping
text.dashboard.one_service_downtime: %s service with downtime
text.dashboard.one_service_acknowledged: %s service status is acknowledged
text.dashboard.map_title: Global host status map
text.dashboard.double_click_or_mouse_wheel_to_zoom: Double click or use the mouse wheel to zoom in and out.
text.dashboard.use_mouse_wheel_to_zoom: Use the mouse wheel to zoom in and out.
text.dashboard.list_top_hosts: Overview of the top hosts
text.dashboard.list_top_services: Overview of the top services
text.dashboard.top_hosts_events: Top events of all hosts
text.dashboard.service_chart: Service chart
text.dashboard.user_chart: Self created chart
text.dashboard.add_new_dashlet: Add a new dashlet
text.dashboard.save_dashboard: Save dashboard
text.dashboard.open_dashboard: Open a dashboard
text.dashboard.create_dashboard: Create an empty dashboard
text.dashboard.delete_dashboard: Delete the dashboard
text.dashboard.rename_dashboard: Rename the dashboard
text.dashboard.clone_dashboard: Clone the dashboard
text.dashboard.really_delete_dashboard: Do you really want to delete the dashboard %s?
text.dashboard.default_dashboard_cannot_deleted: The default dashboard cannot be deleted!
text.dashboard.name: Name of the dashboard
text.dashboard.data_format: In which format the data should be shown?
text.dashboard.show_as_chart: Show as chart
text.dashboard.show_as_text: Show as text
text.allow_from_desc: The keyword <i>all</i> is equal to <i>0.0.0.0/0, ::/0</i> and means that the access is allowed from all IP addresses.
 Examples:
 <br/><br/>192.168.10.0/24, 192.168.14.10/32
 <br/><br/>Note that prepend zeros are not allowed:
 <br/><br/><i>010.005.008.001</i> or <i>0001::0001</i> is not allowed
 <br/><i>10.5.8.1</i> or <i>1::1</i> is allowed

site.login.welcome: Welcome to Bloonix! Please log in.
site.login.title: Login to the monitoring system
site.login.username: Email
site.login.password: Password
site.login.error: Bad login! Try it again!
site.login.login: Please login with your username and password:
site.login.forgot_password: Forgot your password?
site.login.want_to_login: Do you want to login?
site.login.request_password: Request a new password.
site.login.forgot_password_info: Please note that the new password is not send
 automatically to your registered e-mail address. An administrator will check
 your request at first and contact you as soon as possible.
site.login.request_success: Your request was successful.<br/>
 An administrator will contact you as soon as possible.
site.login.request_failed: Your request was not successful. Please try it again.
site.login.follow: Follow Bloonix
site.login.sign_up: Sign up for a Bloonix account
site.login.documentation: The Bloonix documentation
site.login.contact: Do you have questions?
site.login.choose_your_language: Select your language

site.help.title: Die Bloonix Hilfe
site.help.doc.bloonix-webgui: Grundlegendes zur Bloonix-WebGUI
site.help.doc.how-does-bloonix-checks-your-hosts-and-services: Wie überwacht Bloonix Hosts und Services
site.help.doc.add-new-host: Einen neuen Host anlegen
site.help.doc.host-parameter: Host Parameter im Detail
site.help.doc.host-variables: Host Variablen
site.help.doc.host-classes: Bauklasse von Hosts
site.help.doc.add-new-service: Einen neuen Service anlegen
site.help.doc.service-parameter: Service Parameter im Detail
site.help.doc.host-alive-check: Was ist ein Host-Alive-Check?
site.help.doc.web-transactions: Web-Transactions
site.help.doc.host-templates: Host Templates einrichten und verwalten
site.help.doc.host-and-service-dependencies: Abhängigkeiten zwischen Hosts und Services
site.help.doc.scheduled-downtimes: Geplante Wartungsarbeiten einrichten
site.help.doc.contacts-and-notifications: Kontakte und Benachrichtigungen
site.help.doc.users-and-groups: Die Benutzer- und Gruppenverwaltung
site.help.doc.bloonix-agent-installation: Den Bloonix-Agenten installieren
site.help.doc.bloonix-agent-configuration: Den Bloonix-Agenten konfigurieren
site.help.doc.notification-screen: Notification Screen
site.help.doc.json-api: Die Bloonix JSON API
site.help.doc.user-charts: Eigene Charts erstellen

schema.company.attr.alt_company_id: Real company ID
schema.company.attr.id: Company ID
schema.company.attr.company: Company
schema.company.attr.title: Title
schema.company.attr.name: Name
schema.company.attr.surname: Surname
schema.company.attr.address1: Address 1
schema.company.attr.address2: Address 2
schema.company.attr.zipcode: Zipcode
schema.company.attr.city: City
schema.company.attr.state: State/Province
schema.company.attr.country: Country
schema.company.attr.phone: Phone
schema.company.attr.fax: Fax
schema.company.attr.email: E-Mail
schema.company.attr.max_templates: Max templates
schema.company.attr.max_hosts: Max hosts
schema.company.attr.max_services: Max services
schema.company.attr.max_services_per_host: Max services per host
schema.company.attr.max_contacts: Max contacts
schema.company.attr.max_contactgroups: Max contactgroups
schema.company.attr.max_timeperiods: Max timeperiods
schema.company.attr.max_timeslices_per_object: Max timeslices
schema.company.attr.max_groups: Max groups
schema.company.attr.max_users: Max users
schema.company.attr.max_dependencies_per_host: Max dependencies per host
schema.company.attr.max_downtimes_per_host: Max downtimes per host
schema.company.attr.max_chart_views_per_user: Max chart views per user
schema.company.attr.max_charts_per_user: Max charts per user
schema.company.attr.max_metrics_per_chart: Max metrics per chart
schema.company.attr.max_dashboards_per_user: Max dashboards per user
schema.company.attr.max_dashlets_per_dashboard: Max dashlets per dashboard
schema.company.attr.max_sms: Max SMS
schema.company.attr.max_hosts_in_reg_queue: Max hosts in queue for registration
schema.company.attr.host_reg_authkey: Authkey for host registrations
schema.company.attr.host_reg_enabled: Host registrations enabled
schema.company.attr.host_reg_allow_from: Allow host registrations from
schema.company.attr.data_retention: Data retention
schema.company.attr.sms_enabled: SMS notifications enabled
schema.company.attr.active: Active
schema.company.attr.comment: Comment
schema.company.attr.sla: SLA
schema.company.attr.variables: Global variables
schema.company.desc.variables: In this field you can define global variables for all hosts. These variables can be used for thresholds by the configuration of service checks. Example:<br/><br/>HTTP.PORT=9000<br/><br/>This variable could be used in the format <i>%HTTP.PORT%</i> for thresholds. Please note that two variables are pre-defined: <i>IPADDR</i> and <i>HOSTNAME</i>. These variables are replaced with the IP address and the hostname of the host. For further information read the help.<br/><br/>Allowed signs: a-z, A-Z, 0-9, dot and underscore
schema.company.desc.active: Activate or de-activate all objects of the company.
schema.company.desc.max_templates: The maximum number of template that can be created.
schema.company.desc.max_hosts: The maximum number of hosts that can be created. Set 0 (null) if unlimited.
schema.company.desc.max_services: The maximum number of services that can be created. Set 0 (null) if unlimited.
schema.company.desc.max_services_per_host: The maximum number of services that can be created for a host.
schema.company.desc.max_contacts: The maximum number of contacts that can be created.
schema.company.desc.max_contactgroups: The maximum number of contactgroups that can be created.
schema.company.desc.max_timeperiods: The maximum number of timeperiods that can be created.
schema.company.desc.max_timeslices_per_object: The maximum number of timeslices that can be created for a timeperiod.
schema.company.desc.max_groups: The maximum number of groups that can be created.
schema.company.desc.max_users: The maximum number of users that can be created.
schema.company.desc.max_dependencies_per_host: The maximum number of dependencies that can be create for a host.
schema.company.desc.max_downtimes_per_host: The maximum number of downtimes that can be created for a host.
schema.company.desc.max_chart_views_per_user: The maximum number of chart views that can be created by a user.
schema.company.desc.max_charts_per_user: The maximum number of user-charts that can be created by a user.
schema.company.desc.max_metrics_per_chart: The maximum number of metrics per user-chart.
schema.company.desc.max_dashboards_per_user: The maximum number of dashboards that can be created by a user.
schema.company.desc.max_dashlets_per_dashboard: The maximum number of dashlets that can be added to a dashboard.
schema.company.desc.max_sms: The maximum number of SMS that can be sent per month. Set 0 (null) if unlimited.
schema.company.desc.max_hosts_in_reg_queue: The maximum number of hosts that are allowed to wait in the queue for for registration.
schema.company.desc.host_reg_authkey: This key can be used in combination with the company ID to register new hosts.
schema.company.desc.host_reg_enabled: With this option it's possible to enable or disable the host registration feature.
schema.company.desc.host_reg_allow_from: Enter a comma separated list of IPs or networks from which a host registration is allowed.
schema.company.desc.data_retention: The retention in days of all data of hosts and services. If a host has a higher data retention configured then the data retention of the company is used.
schema.company.text.edit_variables: Global variables
schema.company.text.list: Overview of all companies
schema.company.text.create: Create a new company
schema.company.text.delete: Delete company
schema.company.text.settings: Company settings
schema.company.text.view: Company %s
schema.company.text.data_retention_info: Your account is limited to %s days.
schema.company.text.simulate_as: Simulate company

schema.user.attr.id: User ID
schema.user.attr.username: Username
schema.user.attr.name: Name
schema.user.attr.phone: Phone
schema.user.attr.timezone: Timezone
schema.user.attr.authentication_key: Authentication key
schema.user.attr.password: Password
schema.user.attr.password_changed: Password changed?
schema.user.attr.manage_contacts: Manage contacts?
schema.user.attr.manage_templates: Manage templates?
schema.user.attr.last_login: Last login
schema.user.attr.locked: Locked
schema.user.attr.role: Role
schema.user.attr.comment: Comment
schema.user.attr.allow_from: Allow from
schema.user.desc.company: Select the company the user belongs to.
schema.user.desc.username: Enter the username in the format <i>user@domain.test</i>.
schema.user.desc.name: This is the users full name.
schema.user.desc.phone: The phone number can be very helpful for colleagues or the Bloonix support in emergency situations.
schema.user.desc.timezone: Select the timezone of the user.
schema.user.desc.authentication_key: With this key it's possible to visit the notification screen without password authentification. The query string to visit the notification screen looks like<br/><br/><b>/screen/?username=XXX;authkey=XXX</b>
schema.user.desc.password: Enter the users login password.
schema.user.desc.password_changed: Set the value to <i>no</i> if you want to force the user to change the password after the first login.
schema.user.desc.manage_contacts: Is the user allowed to manage contacts?
schema.user.desc.manage_templates: Is the user allowed to manage host templates?
schema.user.desc.locked: Lock or unlock the user. Locked users cannot login to the monitoring interface.
schema.user.desc.role: Which role does the user have? Users with the role <i>operator</i> are power users and can manage user accounts and user groups. Users with the role <i>user</i> are not allowed to manage other users and groups.
schema.user.desc.comment: This field can be used for internal comment about the user.
schema.user.desc.allow_from: It's possible to set a comma separated list of ip addresses from which the user is restricted to login. With the keyword <i>all</i> the login has no restriction.
schema.user.text.list: Overview of all users
schema.user.text.create: Create a new user
schema.user.text.delete: Delete user
schema.user.text.view: User %s
schema.user.text.password_update: Please enter a new password.
schema.user.text.current_password: Current password
schema.user.text.new_password: New password
schema.user.text.repeat_password: Repeat the new password
schema.user.text.select_language: Select your preferred language
schema.user.desc.select_language: Please note that the complete WebGUI is reloaded after the language were selected and you will be redirected to the dashboard!
schema.user.text.is_logged_in: Logged in
schema.user.text.session_expires: Session expires

schema.roster.attr.id: Roster ID
schema.roster.attr.roster: Roster
schema.roster.attr.description: Description
schema.roster.attr.active: Active
schema.roster.text.list: Overview of all rosters

schema.group.attr.id: Group ID
schema.group.attr.company_id: Company ID
schema.group.attr.groupname: Groupname
schema.group.attr.description: Description
schema.group.desc.company: Select the company the group belongs to.
schema.group.desc.groupname: This is the group name. The group name should be unique.
schema.group.desc.description: Enter a short description about the group.
schema.group.text.list: Overview of all groups
schema.group.text.create: Create a new group
schema.group.text.delete: Delete group
schema.group.text.settings: Group settings
schema.group.text.group_members: Members of group <b>%s</b>
schema.group.text.host_members: Group members
schema.group.text.host_nonmembers: Non group members
schema.group.text.selected_hosts: Selected hosts
schema.group.text.add: Add a new user to the group
schema.group.text.add_user: Add a user to the group
schema.group.text.remove_user: Remove user from group
schema.group.text.update_user: Modify access rights
schema.group.text.may_create_services: May create services
schema.group.text.may_modify_services: May modify services
schema.group.text.may_delete_services: May delete services

schema.hs_downtime.attr.id: ID
schema.hs_downtime.attr.begin_time: Begin time
schema.hs_downtime.attr.end_time: End time
schema.hs_downtime.attr.timeslice: Timeslice
schema.hs_downtime.attr.description: Description
schema.hs_downtime.attr.username: Added by
schema.hs_downtime.attr.timezone: Timezone
schema.hs_downtime.text.create: Create a scheduled downtime
schema.hs_downtime.text.delete: Delete a scheduled downtime
schema.hs_downtime.text.preset: Preset
schema.hs_downtime.text.select_services: Services<br/><small>Do not select any servives if you want to<br/>create a downtime for the complete host.</small>

schema.host_downtime.text.title: Scheduled downtimes for host %s
schema.service_downtime.text.title: Scheduled service downtimes for host %s

schema.host.attr.id: Host ID
schema.host.attr.company_id: Company ID
schema.host.attr.password: Password
schema.host.attr.hostname: Hostname
schema.host.attr.description: Description
schema.host.attr.ipaddr: IP-Address
schema.host.attr.ipaddr6: IP-Address v6
schema.host.attr.comment: Comment
schema.host.attr.sysgroup: System group
schema.host.attr.sysinfo: System information
schema.host.attr.host_class: Host class
schema.host.attr.system_class: System class
schema.host.attr.location_class: Location class
schema.host.attr.os_class: Operating system class
schema.host.attr.hw_class: Hardware class
schema.host.attr.env_class: Environment class
schema.host.attr.hw_manufacturer: HW manufacturer
schema.host.attr.hw_product: HW product
schema.host.attr.os_manufacturer: OS manufacturer
schema.host.attr.os_product: OS product
schema.host.attr.virt_manufacturer: Virtualization manufacturer
schema.host.attr.virt_product: Virtualization product
schema.host.attr.location: Location
schema.host.attr.coordinates: Coordinates
schema.host.attr.active: Active
schema.host.attr.allow_from: Allow from
schema.host.attr.max_sms: Max SMS per month
schema.host.attr.status: Status
schema.host.attr.interval: Interval
schema.host.attr.retry_interval: Retry interval
schema.host.attr.timeout: Timeout
schema.host.attr.notification: Notifications enabled
schema.host.attr.notification_interval: Notification interval
schema.host.attr.last_check: Last check
schema.host.attr.max_services: Max services
schema.host.attr.variables: Host variables
schema.host.attr.data_retention: Data retention
schema.host.desc.company_id: Select the company the host belongs to.
schema.host.desc.password: This password is used by the Bloonix Agents. If an agent wants to connect to the Bloonix server to deliver host statistics then this is only possible if the agent knows the host id and the password.
schema.host.desc.hostname: This is the fully qualified hostname.
schema.host.desc.status: The status of the host. Possible values are OK, INFO, WARNING, CRITICAL or UNKNOWN.
schema.host.desc.description: This is a short description of the host.
schema.host.desc.ipaddr: This is the main IP address of the host.
 <br/><br/>Note that prepend zeros are not allowed:
 <br/><br/><i>010.005.008.001</i> or <i>0001::0001</i> is not allowed
 <br/><i>10.5.8.1</i> or <i>1::1</i> is allowed
schema.host.desc.ipaddr6: This is the main IP v6 address of the host.
 <br/><br/>Note that prepend zeros are not allowed:
 <br/><br/><i>010.005.008.001</i> or <i>0001::0001</i> is not allowed
 <br/><i>10.5.8.1</i> or <i>1::1</i> is allowed
schema.host.desc.comment: This field can be used to set a short comment to the host.
schema.host.desc.sysgroup: This is a complete free to use field with no restrictions.
schema.host.desc.sysinfo: This field allows you to set an external link to you own host documentation, e.g.:<br/><br/>Linktext=https://mysite.test/?id=12345.<br/><br/>Not allowed characters: "\
schema.host.desc.host_class: Host class examples:<br/>
 <br/>/Network/Router
 <br/>/Network/Switch
 <br/><br/>Not allowed characters are double quotes: "
schema.host.desc.system_class: System class examples:<br/>
 <br/>/Physical
 <br/>/Virtual
 <br/><br/>Not allowed characters are double quotes: "
schema.host.desc.location_class: Location class examples:<br/>
 <br/>/EU/Germany/Hamburg/DC1/Rack10
 <br/>/EU/France/Nancy/DC3/Rack12
 <br/><br/>Not allowed characters are double quotes: "
schema.host.desc.os_class: Operating system class examples:<br/>
 <br/>/Linux/CentOS/7
 <br/>/Windows/Server/2012
 <br/><br/>Not allowed characters are double quotes: "
schema.host.desc.hw_class: Hardware class examples:<br/>
 <br/>/Server/Dell/R730
 <br/>/Printer/Canon/ip2770
 <br/><br/>Not allowed characters are double quotes: "
schema.host.desc.env_class: Environment class examples:<br/>
 <br/>/Project A/Subproject A1
 <br/>/Project B/Subproject B1
 <br/><br/>Not allowed characters are double quotes: "
schema.host.desc.hw_manufacturer: e.g. IBM, HP, Dell, Fujitsu Siemens
schema.host.desc.hw_product: e.g. Dell Power Edge 2950
schema.host.desc.os_manufacturer: e.g. Red Hat, Microsoft, CISCO
schema.host.desc.os_product: e.g. RHEL5, Debian Lenny, Windows Server 2003
schema.host.desc.virt_manufacturer: e.g. VMware, Parallels
schema.host.desc.virt_product: e.g. VMware-Server, Virtuozzo
schema.host.desc.location: e.g. New York, Datacenter 3, Room 6, Rack A29
schema.host.desc.coordinates: Select the location of the host by country code.
schema.host.desc.active: Active or de-activate the host and all services.
schema.host.desc.allow_from: With this field it's possible to set a comma separated list of IP addresses from which the Bloonix agents are allowed to deliver host statistics. Set the keyword <i>all</i> to allow all IP addresses.
schema.host.desc.max_sms: In this field you can define the maximum number of SMS that can be sent per month.
schema.host.desc.interval: This is the check interval of all services of the host.
schema.host.desc.retry_interval: This is the retry interval of all services of the host. If a service is not in OK status then the interval is forced to this value.
schema.host.desc.timeout: This is the timeout of all services of the host. The timeout counter begins after the interval. If the status of a service is not updated in this time then a critical status is set for the services with the information that it seems that the Bloonix agent is not working.
schema.host.desc.notification: Enable or disable the notifications of all services.
schema.host.desc.max_services: Set the maximum number of services that can be configured for the host. 0 means unlimited.
schema.host.desc.variables: In this field you can define host variables. These variables can be used for thresholds by the configuration of service checks. Example:<br/><br/>HTTP.PORT=9000<br/><br/>This variable could be used in the format <i>%HTTP.PORT%</i> for thresholds. Please note that two variables are pre-defined: <i>IPADDR</i> and <i>HOSTNAME</i>. These variables are replaced with the IP address and the hostname of the host. For further information read the help.<br/><br/>Allowed signs: a-z, A-Z, 0-9, dot and underscore
schema.host.desc.data_retention: The retention in days of all data of the host and services. 
schema.host.text.list: Overview of all hosts
schema.host.text.registered_host_list: Overview of all hosts ready for registration
schema.host.text.view: Host %s
schema.host.text.create: Create a new host
schema.host.text.delete: Delete host
schema.host.text.settings: Host settings
schema.host.text.list_host_classes: Host classes
schema.host.text.host_class_help_link: Read how this feature works
schema.host.text.multiple_selection_help: <h4>This action requires to select at least one host.</h4>
 To mark a single host just click on a row. If you want to mark multiple hosts
 just press and hold <i>CTRL</i> on your keyboard. If you press and hold the left mouse button
 you can mark a range of hosts.
schema.host.text.multiple_downtimes: Schedule a downtime for multiple hosts
schema.host.text.multiple_notification: Enable or disable the notifications of multiple hosts
schema.host.text.multiple_activate: Activate or deactivate multiple hosts
schema.host.text.multiple_edit: Edit the configuration of multiple hosts
schema.host.text.multiple_edit_info: Note: empty fields will be ignored!
schema.host.text.add_hosts_to_group: Add selected hosts to a group
schema.host.text.delete_reg_hosts: Delete hosts
schema.host.text.mtr_output: MTR result of host %s
schema.host.text.mtr_chart: MTR chart
schema.host.text.report_title: Report for host %s
schema.host.text.add_hosts_to_group: Add the hosts to a group
schema.host.text.add_host_to_group: Add the host to a user group
schema.host.desc.add_host_to_group: Add the host at least to one group.
schema.host.text.add_host_to_contactgroup: Add the host to a contact group
schema.host.desc.add_host_to_contactgroup: Add the host to a contact group to get event notifications via email or sms.
schema.host.text.add_host_to_host_template: Add the host to a host template
schema.host.desc.add_host_to_host_template: The host inherits all services from the host template.
schema.host.text.list_templates: Host %s has the following templates configured
schema.host.action.delete_reg_hosts: Delete the selected hosts!
schema.host.action.disable_notifications_multiple: Disable notifications of the selected hosts
schema.host.action.enable_notifications_multiple: Enable notifications of the selected hosts
schema.host.action.activate_multiple: Activate the selected hosts
schema.host.action.deactivate_multiple: Deactivate the selected hosts
schema.host.action.remove_template: Remove template
schema.host.text.remove_template_warning: Please note that all services of the template will be removed from all hosts that has its services inherited from this template!
schema.host.text.templates_not_assigned: Not assigned templates
schema.host.action.add_template: Add template
schema.host.info.notification_disabled: Notifications are disabled of the host.
schema.host.info.notification_disabled_short: Notifications disabled
schema.host.info.inactive: The host is not active.
schema.host.info.sysinfo: External system information available.
schema.host.menu.host_class: Host
schema.host.menu.system_class: System
schema.host.menu.location_class: Location
schema.host.menu.os_class: Operating system
schema.host.menu.hw_class: Hardware
schema.host.menu.env_class: Environment

schema.timeperiod.attr.id: Timeperiod ID
schema.timeperiod.attr.name: Timeperiod
schema.timeperiod.attr.description: Description
schema.timeperiod.desc.name: This is the name of the timeperiod.
schema.timeperiod.desc.description: This is a short description of the timeperiod.
schema.timeperiod.text.list: Overview of all timeperiods
schema.timeperiod.text.create: Create a new timeperiod
schema.timeperiod.text.delete: Delete timeperiod
schema.timeperiod.text.settings: Timeperiod settings
schema.timeperiod.text.examples: Timeperiod examples
schema.timeperiod.examples: <p><b>Syntax: DAY-RANGE TIME-RANGE</b></p></br>
 <pre>
 DAY RANGE                       EXAMPLES
 ------------------------------------------------------------
 Weekday                         Monday
 Weekday - Weekday               Monday - Friday
 Month                           Januar
 Month - Month                   Januar - July
 Month Day                       Januar 1
 Month Day - Month Day           Januar 1 - July 15
 Year                            2010
 Year - Year                     2010 - 2012
 YYYY-MM-DD                      2010-01-01
 YYYY-MM-DD - YYYY-MM-DD         2010-01-01 - 2012-06-15
 </pre></br>
 <pre>
 TIME RANGE                      EXAMPLES
 ------------------------------------------------------------
 HH:MM - HH:MM                   09:00 - 17:00
 HH:MM - HH:MM, HH:MM - HH:MM    00:00 - 08:59, 17:01 - 23:59
 </pre></br>
 <p><b>Examples:</b></p></br>
 <pre>
 Monday - Friday     09:00 - 17:00
 Monday - Friday     00:00 - 08:59, 17:01 - 23:59
 Saturday - Sunday   00:00 - 23:59
 </pre></br>

schema.timeslice.attr.id: Timeslice ID
schema.timeslice.attr.timeslice: Timeslice
schema.timeslice.text.list: Overview of all timeslices
schema.timeslice.text.delete: Delete timeslice

schema.host_template.attr.id: Template ID
schema.host_template.attr.name: Template name
schema.host_template.attr.description: Description
schema.host_template.attr.tags: Tags
schema.host_template.desc.name: This is the name of the template.
schema.host_template.desc.description: Set a short description for the template.
schema.host_template.desc.tags: Tags are used to add registered hosts to host templates.
schema.host_template.text.list: Overview of all host templates
schema.host_template.text.delete: Delete a template
schema.host_template.text.create: Create a new template
schema.host_template.text.setting: Template settings
schema.host_template.text.view: Template %s
schema.host_template.text.view_services: View services
schema.host_template.text.view_members: Add / Remove hosts
schema.host_template.text.delete_service: Delete a service from the template
schema.host_template.text.delete_service_warning: Please note that the service will be deleted from all hosts that gets the service inherited from this template.
schema.host_template.test.host_members: Hosts in group
schema.host_template.test.host_nonmembers: Hosts not in group
schema.host_template.text.selected_hosts: Selected hosts
schema.host_template.text.clone: Clone the template
schema.host_template.text.clone_title: Clone template %s
schema.host_template.text.templates: Templates

schema.contact.attr.id: Contact ID
schema.contact.attr.company_id: Company ID
schema.contact.attr.name: Name
schema.contact.attr.mail_to: E-Mail
schema.contact.attr.mail_notifications_enabled: E-Mail global enabled
schema.contact.attr.mail_notification_level: Mail notification level
schema.contact.attr.sms_to: Mobil number
schema.contact.attr.sms_notifications_enabled: SMS global enabled
schema.contact.attr.sms_notification_level: SMS notification level
schema.contact.attr.escalation_time: Escalation level
schema.contact.desc.company_id: Select the company the contact belongs to.
schema.contact.desc.name: This is the full name of the contact.
schema.contact.desc.escalation_time: Select an escalation level for the contact. With the escalation level it's possible to control when a contact gets a notification. As example the escalation level of 30 minutes means that the contact is notfied if the service is still not OK after 30 minutes.
schema.contact.text.list: Overview of all contacts
schema.contact.text.create: Create a new contact
schema.contact.text.delete: Delete contact
schema.contact.text.settings: Contact settings
schema.contact.text.timeperiods: Contact timeperiods
schema.contact.text.message_services: Contact message services
schema.contact.text.remove_timeperiod: Remove the timeperiod from contact
schema.contact.text.remove_message_service: Remove the message service from contact
schema.contact.text.escalation_time_null: Notify immediate
schema.contact_timeperiod.attr.message_service: Message service
schema.contact_timeperiod.attr.exclude: Exclude
schema.contact_timeperiod.text.add: Add a timeperiod to the contact
schema.contact_message_services.attr.message_service: Message service
schema.contact_message_services.attr.enabled: Enabled
schema.contact_message_services.attr.send_to: Send to
schema.contact_message_services.attr.notification_level: Notification level
schema.contact_message_services.desc.message_service: The message service.
schema.contact_message_services.desc.enabled: Enable or disable the message service.
schema.contact_message_services.desc.send_to: The receiver of the message.
schema.contact_message_services.desc.notification_level: Select the status level for which you want to receive notifications.
schema.contact_message_services.text.add: Add a message service to the contact
schema.contact_message_services.text.remove: Remove a message service

schema.contactgroup.attr.id: Contactgroup ID
schema.contactgroup.attr.name: Name
schema.contactgroup.attr.description: Description
schema.contactgroup.desc.name: This is the name of the contact group. The name should be unique.
schema.contactgroup.desc.description: Set a short description for the group.
schema.contactgroup.text.list: Overview of all contactgroups
schema.contactgroup.text.create: Create a new contact group
schema.contactgroup.text.delete: Delete contact group
schema.contactgroup.text.settings: Contact group settings
schema.contactgroup.text.contact_members: Contacts in group
schema.contactgroup.text.contact_nonmembers: Contacts not in group
schema.contactgroup.text.group_members: Members of contact group '<b>%s</b>'
schema.contactgroup.text.host_members: Hosts in group
schema.contactgroup.text.host_nonmembers: Hosts not in group
schema.contactgroup.text.selected_hosts: Selected hosts

schema.contactgroup.text.service_members: Services in contact group
schema.contactgroup.text.service_nonmembers: Services not in contact group
schema.contactgroup.text.selected_services: Selected services

schema.notification.attr.time: Timestamp
schema.notification.attr.send_to: Receipient
schema.notification.attr.subject: Subject
schema.notification.attr.message: Message
schema.notification.attr.message_service: Type
schema.notification.text.list: Sent notifications for host %s
schema.notification.text.search: Search for notifications
schema.notification.text.filter_message: Filter message
schema.notification.text.filter_message_service: sms, mail, ...

schema.chart.attr.id: Chart ID
schema.chart.attr.title: Chart title
schema.chart.attr.subtitle: Chart subtitle
schema.chart.attr.options: Chart options
schema.chart.attr.preset_last: Preset: last
schema.chart.attr.refresh: Refresh
schema.chart.attr.preset: Preset
schema.chart.attr.chart_size: Size
schema.chart.attr.from: From
schema.chart.attr.to: To
schema.chart.attr.datetime: Date and time
schema.chart.attr.from_to: From <b>%s</b> to <b>%s</b>
schema.chart.attr.charts: Charts
schema.chart.desc.charts: <b>Select multiple charts with</b><br/><br/>
 <i>CTRL + click</i><br/>or<br/><i>press + hold left mouse button + move pointer</i>
schema.chart.text.multiple_view: Chart view
schema.chart.text.view: Charts for host <b>%s</b>
schema.chart.text.multiview: View multiple charts
schema.chart.text.select: Chart selection for host %s
schema.chart.text.multiselect: Select charts for multiple hosts
schema.chart.text.alignment: Chart alignment
schema.chart.text.chart_views: Chart views
schema.chart.text.save_view: Save view
schema.chart.text.load_view: Load view
schema.chart.text.delete_view: Delete chart view
schema.chart.text.really_delete_view: Do you really want to delete chart view <b><b>%s</b></b>?
schema.chart.text.selected: selected
schema.chart.text.selected_max_reached: (max) selected
schema.chart.text.back_to_selection: Back to the chart selection
schema.chart.text.chart_information: Chart information
schema.chart.text.chart_id: Chart-ID: %s
schema.chart.text.service_charts: Service charts
schema.chart.text.user_charts: User charts
schema.chart.text.chart_type: Select the chart type
schema.chart.text.charts: Charts

schema.dependency.attr.id: Dependency ID
schema.dependency.attr.host_id: Host ID
schema.dependency.attr.service_id: Service ID
schema.dependency.attr.on_host_id: Depends on host ID
schema.dependency.attr.on_service_id: Depends on service ID
schema.dependency.attr.status: Status
schema.dependency.attr.on_status: Parent status
schema.dependency.attr.inherit: Inheritance
schema.dependency.attr.timeslice: Timeslice
schema.dependency.attr.timezone: Timezone
schema.dependency.text.list: Dependencies for host %s
schema.dependency.text.create_from: Create a new dependency from
schema.dependency.text.create: Create a new dependency for host <b>%s</b>
schema.dependency.text.really_delete: Do you really want to delete dependency <b>%s</b>?
schema.dependency.text.host_to_host: host to host
schema.dependency.text.host_to_service: host to service
schema.dependency.text.service_to_host: service to host
schema.dependency.text.service_to_service: service to service
schema.dependency.text.for_node: Dependencies for node <b>%s</b>
schema.dependency.text.no_dependencies: There are no dependencies configured!
schema.dependency.text.dependencies: Dependencies
schema.dependency.text.host: Host
schema.dependency.text.service: Service
schema.dependency.text.depends_on_host: depends on host
schema.dependency.text.depends_on_service: depends on service
schema.dependency.text.active_time: Active time
schema.dependency.text.workflow_from_host: From host
schema.dependency.text.workflow_from_service: and from service
schema.dependency.text.workflow_to_host: to host
schema.dependency.text.workflow_to_service: and to service
schema.dependency.text.workflow_from_host_status: Select the status of the host that activates the dependency flow
schema.dependency.text.workflow_from_service_status: Select the status of the service that activates the dependency flow
schema.dependency.text.workflow_to_host_status: Select the status of the parent host that avoids a notification
schema.dependency.text.workflow_to_service_status: Select the status of the parent service that avoids a notification
schema.dependency.text.workflow_inherit: Activate inheritation
schema.dependency.text.workflow_timezone: Set the timezone for the timeslice
schema.dependency.text.workflow_timeslice: Set the timeslice when the dependency is active

schema.event.attr.id: Event ID
schema.event.attr.time: Timestamp
schema.event.attr.last_status: Last status
schema.event.attr.status: Status
schema.event.attr.duration: Duration
schema.event.attr.attempts: Attempts
schema.event.attr.tags: Tags
schema.event.text.list: Events of host %s
schema.event.text.filter_message: Filter message
schema.event.text.host_service: Host / Service
schema.event.text.filter_by_status: Filter by status
schema.event.text.filter_by_duration: Filter by duration
schema.event.text.filter_by_query: Filter messages by query
schema.event.text.filter_by_service: Filter by services

schema.service.attr.id: Service ID
schema.service.attr.ref_id: ID
schema.service.attr.agent_id: Agent location
schema.service.attr.service_name: Service name
schema.service.attr.command: Command
schema.service.attr.command_options: Check settings
schema.service.attr.timeout: Timeout
schema.service.attr.interval: Interval
schema.service.attr.retry_interval: Retry interval
schema.service.attr.description: Description
schema.service.attr.plugin: Plugin
schema.service.attr.comment: Comment
schema.service.attr.attempt_warn2crit: Switch WARNING to CRITICAL
schema.service.attr.attempt_counter: Attempt counter
schema.service.attr.attempt_max: Notify after X attempts
schema.service.attr.active: Active
schema.service.attr.acknowledged: Service status acknowledged
schema.service.attr.notification: Notifications enabled
schema.service.attr.notification_interval: Notification interval
schema.service.attr.last_check: Last check
schema.service.attr.fd_enabled: Flap detection enabled
schema.service.attr.fd_time_range: Flap detection time range
schema.service.attr.fd_flap_count: Notifiy after X status switches
schema.service.attr.next_check: Next check
schema.service.attr.last_event: Last event
schema.service.attr.is_volatile: Is the service volatile
schema.service.attr.volatile_status: The current volatile status of the service
schema.service.attr.volatile_retain: The volatile retain time
schema.service.attr.volatile_since: Since the status is volatile
schema.service.attr.status: Status
schema.service.attr.message: Status information
schema.service.attr.result: Advanced status information
schema.service.attr.status_since: Status since
schema.service.attr.check_by_location: Check by location (agent ID)
schema.service.attr.default_location: Default location
schema.service.attr.flapping: Flapping
schema.service.attr.scheduled: Has downtime
schema.service.attr.host_alive_check: Is this a host alive check?
schema.service.attr.passive_check: Is this a passive check?
schema.service.attr.agent_options.timeout: Global check timeout
schema.service.desc.agent_options.timeout: This is the global execution timeout of the check itself. After the timeout the check is killed and a CRITICAL status is triggered. This is very useful for checks that hangs and are unable to stop itself.<br/><br/>Default: 30 seconds
schema.service.attr.agent_options.set_tags: Set tags
schema.service.desc.agent_options.set_tags: Which tags should be set if the check returns a WARNING, CRITICAL or UNKNOWN status.
schema.service.desc.agent_id: This is the location from where the check is executed.
schema.service.desc.service_name: This is the display name of the service.
schema.service.desc.description: This is a short description of the check.
schema.service.desc.comment: This is a short internal comment to the check.
schema.service.desc.interval: This is the check interval of the service. If no value is set, then the interval of the host is inherited.
schema.service.desc.retry_interval: This is the retry interval of the service. If a service is not in OK status then the interval is forced to this value. If no value is set, then the retry interval setting of the host is inherited.
schema.service.desc.timeout: This is the timeout of the service and begins to count after the interval. If the status of the service is not updated in this time then a critical status is set for the service with the information that it seems that the Bloonix agent is not working. If no value is set, then the timeout of the host is inherited.
schema.service.desc.attempt_warn2crit: This option is useful if you want that the status of the service upgrades to CRITICAL if the real status is WARNING and maximum attempts were reached.
schema.service.desc.attempt_max: This option controls when you gets a notification of services that are not in status OK. As example a value of 3 means that you get a notification first if the service check returns 3 times in a row a not OK status.
schema.service.desc.active: This option activates or de-activates the service check.
schema.service.desc.acknowledged: This option is useful if a service is not OK and if you want to disable the notifications temporary. The notifications will be enabled again if the services switched to the status OK.
schema.service.desc.notification: This option activates or de-activates the notifications per email or SMS.
schema.service.desc.notification_interval: This is the notification interval for emails. As long as the service is not OK you will be re-notified in this interval. If no value is set, then the interval of the host is inherited.
schema.service.desc.fd_enabled: This option enables or disables the flap detection. The flap detection is very useful to detect services that switches between OK and not OK in a very short time and when the counter of <i>attempt max</i> is never reached. The flap detection checkes how many times a service switched between different states in a given time. If the status switched to many times, then a notification will be triggered.
schema.service.desc.fd_time_range: This is the period the flap detection checks for status switches.
schema.service.desc.fd_flap_count: This is the threshold for the flap detection. If more than x-times the status switched in a given time a notificaton is triggered.
schema.service.desc.is_volatile: With this option you can define if the check is <i>volatile</i>. Some checks has the peculiarity that they are only for a very short time in a CRITICAL status. As example if you check a logfile for specific strings, like <i>possible break-in attempt</i> and the check returns a CRITICAL status because the string were found, then it's possible that the next check does not find the string any more and would return the status OK. In this case maybe you would never notice that someone tried to break in. For this purpose you can define that the service is <i>volatile</i>. That means that the service stays in a CRITICAL or WARNING state until you clear the volatile status manually.
schema.service.desc.volatile_retain: Set a time after the volatile status is automatically cleared.
schema.service.desc.host_alive_check: A host alive check is a check that determines if a host is down or alive. If this check returns a critical status then you get a special notification. If other service checks returns a critical status at the same time then the notifications will be suppressed. It's recommended you use the ping check as host alive check.
schema.service.desc.passive_check: A passive check is a check which is not checked by Bloonix itself, but by a external service or script. Passive checks has no timeout and are very useful, for example, for SNMP traps. The external service has to report a critical state to the Bloonix-Agent, which in turn reports the state to the Bloonix-Server.
schema.service.text.services: Services
schema.service.text.list: Service details for all hosts
schema.service.text.title: Services
schema.service.text.create: Create a new service
schema.service.text.settings: Settings of service <b>%s</b>
schema.service.text.delete: Delete service
schema.service.text.clone: Clone service
schema.service.text.clone_service: Clone service %s
schema.service.text.clone_to_the_same_host: Clone the service to the same host
schema.service.text.clone_select_host: Select another host
schema.service.text.choose_plugin: Select a plugin
schema.service.text.attempt: Attempts
schema.service.text.host_alive_check: Host-Alive-Check
schema.service.text.select_location_check_type: Select the type of the check
schema.service.text.select_location_check_type_info: Click on the buttons to see a short description of each type
schema.service.text.multiple_help: <h4>This action requires to select at least one service.</h4>
 To mark a single service just click on a row. If you want to mark multiple services
 just press and hold <i>CTRL</i> on your keyboard. If you press and hold the left mouse button
 you can mark a range of services.
schema.service.text.multiple_downtimes: Schedule a downtime for multiple services
schema.service.text.multiple_notification: Enable or disable the notifications of multiple services
schema.service.text.multiple_activate: Activate or deactivate multiple services
schema.service.text.multiple_acknowledge: Acknowledge or clear acknowledgements of multiple services
schema.service.text.multiple_volatile: Clear the volatile status of multiple services
schema.service.text.multiple: Service actions
schema.service.text.default_location_check_button: Default check
schema.service.text.failover_location_check_button: Failover check
schema.service.text.rotate_location_check_button: Rotate check
schema.service.text.multiple_location_check_button: Multiple checks
schema.service.text.command_options: Check settings
schema.service.text.no_command_options: This check has no settings.
schema.service.text.notification_settings: Notification settings
schema.service.text.view_location_report: View location report
schema.service.text.view_wtrm_report: View web transaction report
schema.service.text.wtrm_result_steps: Web transaction - step results
schema.service.text.sla_requirements: Please note that for free accounts only the default check is available!
schema.service.text.host_template: Host template
schema.service.text.multiple_force_next_check: Reset the interval and force the next check of the service
schema.service.action.activate_multiple: Activate the selected services
schema.service.action.deactivate_multiple: Deactivate the selected services
schema.service.action.enable_notifications_multiple: Enable notifications of the selected services
schema.service.action.disable_notifications_multiple: Disable notifications of the selected services
schema.service.action.acknowledge_multiple: Acknowledge the status of the selected services
schema.service.action.clear_acknowledgement_multiple: Clear the acknowledgement of the selected services
schema.service.action.clear_volatile_multiple: Clear the volatile status of the selected services
schema.service.action.multiple_force_next_check: Reset the interval and force the next check of the service
schema.service.info.notification: Notifications are disabled of the service.
schema.service.info.active: The service is not active.
schema.service.info.acknowledged: The service is acknowledged.
schema.service.info.flapping: The service is flapping.
schema.service.info.is_volatile: The service is in volatile status.
schema.service.info.host_alive_check: This is a host-alive-check.
schema.service.info.has_result: This service check has advanced status information. Click me :-)
schema.service.info.inactive: The service is inactive.
schema.service.info.notification_disabled: Notifications are disabled of the service.
schema.service.info.inherits_from_host_template: This service is inherited from host template '%s'.
schema.service.info.status_nok_since: The service was not OK within the the last 60 minutes.
schema.service.desc.agent_tooltip: <h3>Installation of the Bloonix-Agent</h3>
 <p>
 This check is executed on your server and requires that you install the Bloonix-Agent
 and the plugin on your server.
 </p>
schema.service.desc.agent_id_tooltip: <h3>From which location should the check be executed?</h3>
 <p>
 You can choose between the options <i>localhost</i>, <i>intranet</i> and <i>remote</i>.
 </p>
 <h3>localhost</h3>
 <p>
 With the option <i>localhost</i> the check is executed local on your server.
 For this action it's necessary that the Bloonix-Agent is installed on your server.
 This option is useful if you want to monitor the system performance like CPU,
 memory or disk usage.
 </p>
 <h3>intranet</h3>
 <p>
 The option <i>intranet</i> means your local network. If you want to monitor the service
 from your local network, then it's necessary that you install the Bloonix-Agent on a
 central server in your intranet. The checks will be executed from this server.
 This option is useful if you want to monitor devices that has no direct internet connection
 like router, switches and so on.
 </p>
 <h3>remote</h3>
 <p>
 With the option <i>remote</i> the check is executed from a external Bloonix-Server. This is
 very useful if you want to monitor your webserver, website, mailserver and other internet services.
 </p>
schema.service.desc.default_check_type_title: Default checkpoint
schema.service.desc.default_check_type: A default check has a pre-defined checkpoint.
 From this checkpoint your service is checked.
schema.service.desc.default_check_type_location: Your service is checked from the following checkpoint:
schema.service.desc.failover_check_type_title: Failover checkpoints
schema.service.desc.failover_check_type: With failover checks it's possible to select a fixed
 checkpoint from which the service is checked. In addition it's possible to select two
 failover checkpoints, from which the service is checked if the check from the fixed checkpoint
 returns a status that is not OK. If the status of all 3 checkpoints is not OK, the counter
 of <i>attempt max</i> is increased.
schema.service.desc.failover_check_type_locations: Select a fixed and two failover checkpoints
schema.service.desc.rotate_check_type_title: Rotate checkpoints
schema.service.desc.rotate_check_type: The rotate check has no fixed checkpoint.
 Instead of that the service check rotates over the selected checkpoints. If a check
 of one checkpoint is not OK, then the check jumps immediate to the next checkpoint.
 If the third checkpoint still returns a status that is not OK then the counter of <i>attempt max</i>
 is increased.
schema.service.desc.rotate_check_type_locations: Your service is checked from the following checkpoints:
schema.service.desc.multiple_check_type_title: Multiple checkpoints
schema.service.desc.multiple_check_type: With this option it's possible to select
 multiple checkpoints from which the service is checked. If 3 checkpoints
 returns a critical status then the counter of <i>attempt max</i> is increased.
schema.service.desc.multiple_check_concurrency_title: Concurrency checks
schema.service.desc.multiple_check_concurrency: Please note that the checks are executed
 concurrent from multiple checkpoints. To avoid overloading your service, you can specify
 the maximum number of concurrent executions.
schema.service.desc.multiple_check_select_concurrency: Select the concurrency:
schema.service.desc.multiple_check_type_locations: Select at least 3 checkpoints:

schema.plugin.attr.id: Plugin-ID
schema.plugin.attr.plugin: Plugin
schema.plugin.attr.categories: Categories
schema.plugin.attr.description: Description
schema.plugin.attr.command: Command
schema.plugin.attr.info: Information
schema.plugin.text.list: Plugins

schema.plugin_stats.attr.alias: Name
schema.plugin_stats.attr.statkey: Key
schema.plugin_stats.attr.datatype: Data type
schema.plugin_stats.attr.description: Description
schema.plugin_stats.text.list: Metrics of plugin %s

schema.user_chart.attr.id: ID
schema.user_chart.attr.description: Description
schema.user_chart.desc.description: Description of the chart.
schema.user_chart.attr.title: Title
schema.user_chart.desc.title: The title of the chart.
schema.user_chart.attr.subtitle: Subtitle
schema.user_chart.desc.subtitle: The title of the chart.
schema.user_chart.attr.yaxis_label: Y-axis label
schema.user_chart.desc.yaxis_label: The label of the Y-axis.
schema.user_chart.text.title: User charts
schema.user_chart.text.user_chart: Chart editor
schema.user_chart.text.editor: User chart editor
schema.user_chart.text.delete: Delete chart
schema.user_chart.text.create: Create a chart
schema.user_chart.text.update: Update a chart
schema.user_chart.text.add_metric: Add metric
schema.user_chart.text.chart_metrics: Chart metrics
schema.user_chart.text.click_to_add_metric: Click to add the metric

schema.location.attr.id: ID
schema.location.attr.ipaddr: IP address
schema.location.attr.hostname: Hostname
schema.location.attr.city: City
schema.location.attr.country: Country
schema.location.attr.country_code: Country code
schema.location.attr.continent: Continent
schema.location.attr.coordinates: Coordinates
schema.location.attr.is_default: Default location
schema.location.attr.authkey: Authkey
schema.location.attr.description: Description
schema.location.text.list: Locations
schema.location.text.create: Create a new location
schema.location.text.view: Location %s
schema.location.text.delete: Delete location %s

site.wtrm.action.doAuth: Set auth basic <b>username</b> and <b>password</b>
site.wtrm.action.doUserAgent: Set the <b>user agent</b> for the request
site.wtrm.action.doUrl: Go to <b>URL</b>
site.wtrm.action.doFill: Fill data into a <b>input</b> field or <b>textarea</b>
site.wtrm.action.doTriggerEvent: Trigger an event on a element
site.wtrm.action.doClick: <b>Click</b> on a element
site.wtrm.action.doSubmit: <b>Submit</b> a form
site.wtrm.action.doCheck: Check a <b>radio button</b> or <b>checkbox</b>
site.wtrm.action.doUncheck: Uncheck a <b>radio button</b> or <b>checkbox</b>
site.wtrm.action.doSelect: <b>Select</b> a value from a selectbox
site.wtrm.action.doWaitForElement: Wait for element
site.wtrm.action.doSleep: <b>Sleep</b> a while
site.wtrm.action.doSwitchToFrame: <b>Switch</b> to frame
site.wtrm.action.doSwitchToParentFrame: <b>Switch</b> to parent frame
site.wtrm.action.doSwitchToNewPage: <b>Switch</b> to new created page
site.wtrm.action.doSwitchToMainPage: <b>Switch</b> to main page
site.wtrm.action.checkUrl: Check the <b>URL</b> in the address bar
site.wtrm.action.checkIfElementExists: Check if an <b>element exists</b>
site.wtrm.action.checkIfElementNotExists: Check if an <b>element does <i>NOT</i> exists</b>
site.wtrm.action.checkIfElementHasText: Check if an <b>element</b> contains <b>text</b> 
site.wtrm.action.checkIfElementHasNotText: Check if an <b>element does <i>NOT</i></b> contain <b>text</b>
site.wtrm.action.checkIfElementHasHTML: Check if an <b>element</b> contains <b>HTML</b>
site.wtrm.action.checkIfElementHasNotHTML: Check if an <b>element does <i>NOT</i></b> contain <b>HTML</b>
site.wtrm.action.checkIfElementHasValue: Check the <b>value</b> of an <b>input</b> field or <b>textarea</b>
site.wtrm.action.checkIfElementHasNotValue: Check if an <b>input</b> field or <b>textarea has <i>NOT</i></b> a specified <b>value</b>
site.wtrm.action.checkIfElementIsChecked: Check if a <b>radio button</b> or <b>checkbox</b> is <b>checked</b>
site.wtrm.action.checkIfElementIsNotChecked: Check if a <b>radio button</b> or <b>checkbox is <i>NOT</i> checked</b>
site.wtrm.action.checkIfElementIsSelected: Check if a <b>value</b> is <b>selected</b> in a selectbox
site.wtrm.action.checkIfElementIsNotSelected: Check if a <b>value is <i>NOT</i> selected</b> in a selectbox
site.wtrm.text.wtrm_workflow: Web Transaction Workflow
site.wtrm.text.check_it: Check it!
site.wtrm.text.quick_check: Quick check!
site.wtrm.text.service_report: Web transaction report for service %s
site.wtrm.text.click_for_details: Click on a row to get a detailed report
site.wtrm.attr.username: Username
site.wtrm.attr.password: Password
site.wtrm.attr.userAgent: User-Agent
site.wtrm.attr.url: URL
site.wtrm.attr.contentType: Content-Type
site.wtrm.attr.status: HTTP-Status
site.wtrm.attr.parent: Parent ID
site.wtrm.attr.element: Element
site.wtrm.attr.value: Value
site.wtrm.attr.hidden: Hide
site.wtrm.attr.event: Event
site.wtrm.attr.text: Inner text
site.wtrm.attr.html: Inner HTML
site.wtrm.attr.ms: Milliseconds
site.wtrm.attr.name: Name
site.wtrm.desc.username: This username for the auth basic authentification.
site.wtrm.desc.password: This password for the auth basic authentification.
site.wtrm.desc.userAgent: This is the User-Agent to send for all requests.
site.wtrm.desc.url: This is the full URL to request. As example: http://www.bloonix.de/
site.wtrm.desc.contentType: Enter content type that is expeced for the URL.
site.wtrm.desc.status: Enter the expected http status for the URL.
site.wtrm.desc.parent: It's possible to set a parent ID. The ID, class or name is searched within the element of the parent ID.
site.wtrm.desc.element: The element you want to select. As example: #id, .class, name<br/><br/>
 It's also possible to search for tags and attributes. Example:<br/><br/>
 &lt;a&gt; - get the first 'a' tag<br/><br/>
 &lt;a[5]&gt; - get the fifth 'a' tag<br/><br/>
 &lt;a a="hello" b="world"&gt; - search for a 'a' tag with the specified attributes and values
site.wtrm.desc.value: The value of the element you wish to fill or check.
site.wtrm.desc.hidden: Do you want to hide the value because it's a password or a secret string?
site.wtrm.desc.event: Trigger an event.
site.wtrm.desc.text: The inner text of an element you wish to check.
site.wtrm.desc.html: The inner HTML of an element you wish to check.
site.wtrm.desc.ms: This is the time in milliseconds to sleep between actions.
site.wtrm.desc.name: This is the name of the element.
site.wtrm.placeholder.username: Username
site.wtrm.placeholder.password: Secret
site.wtrm.placeholder.userAgent: User-Agent
site.wtrm.placeholder.url: http://www.bloonix.de/
site.wtrm.placeholder.contentType: text/html
site.wtrm.placeholder.status: 200
site.wtrm.placeholder.parent: #parent-id (optional)
site.wtrm.placeholder.element: #element-id OR .class-name OR name
site.wtrm.placeholder.value: value
site.wtrm.placeholder.hidden: Hide this value?
site.wtrm.placeholder.text: Lorem ipsum...
site.wtrm.placeholder.html: <span>Loren ipsum...</span>
site.wtrm.placeholder.ms: 5000
site.wtrm.command.doAuth: Use auth basic with username <b>%s</b> and password <b>%s</b>
site.wtrm.command.doUserAgent: Set the user agent to <b>%s</b>
site.wtrm.command.doUrl: Go to URL <b>%s</b>
site.wtrm.command.doFill: Fill element <b>%s</b> with value <b>%s</b>
site.wtrm.command.doTriggerEvent: Trigger event <b>%s</b> on element <b>%s</b>
site.wtrm.command.doClick: Click on element <b>%s</b>
site.wtrm.command.doSubmit: Submit form <b>%s</b>
site.wtrm.command.doCheck: Check the radio button or checkbox of element <b>%s</b> with value <b>%s</b>
site.wtrm.command.doUncheck: Uncheck the radio button or checkbox <b>%s</b> with value <b>%s</b>
site.wtrm.command.doSelect: Select the value <b>%s</b> from the selectbox <b>%s</b>
site.wtrm.command.doWaitForElement: Wait for element <b>%s</b>
site.wtrm.command.doWaitForElementWithText: Wait for element <b>%s</b> with text <b>%s</b>
site.wtrm.command.doSleep: Sleep <b>%s</b>ms
site.wtrm.command.doSwitchToFrame: Switch to frame <b>%s</b>
site.wtrm.command.doSwitchToParentFrame: Switch to parent frame
site.wtrm.command.doSwitchToNewPage: Switch to new created page
site.wtrm.command.doSwitchToMainPage: Switch to main page
site.wtrm.command.checkUrl: Check if the URL in the address bar is <b>%s</b>
site.wtrm.command.checkUrlWithContentType: Check if the URL <b>%s</b> has content type %s
site.wtrm.command.checkIfElementExists: Check if the element <b>%s</b> exists
site.wtrm.command.checkIfElementNotExists: Check if the element <b>%s</b> does <i>NOT</i> exists
site.wtrm.command.checkIfElementHasText: Check if the element <b>%s</b> contains <b>%s</b>
site.wtrm.command.checkIfElementHasNotText: Check if the element <b>%s</b> does <i>NOT</i> contain <b>%s</b>
site.wtrm.command.checkIfElementHasHTML: Check if the element <b>%s</b> contains <b>%s</b>
site.wtrm.command.checkIfElementHasNotHTML: Check if the element <b>%s</b> does <i>NOT</i> contain <b>%s</b>
site.wtrm.command.checkIfElementHasValue: Check if the input field or textarea with element <b>%s</b> contains <b>%s</b>
site.wtrm.command.checkIfElementHasNotValue: Check if the input field or textarea with element <b>%s</b> does <i>NOT</i> contain <b>%s</b>
site.wtrm.command.checkIfElementIsChecked: Check if the radio button or checkbox <b>%s</b> is checked
site.wtrm.command.checkIfElementIsNotChecked: Check if the radio button or checkbox <b>%s</b> is <i>NOT</i> checked
site.wtrm.command.checkIfElementIsSelected: Check if the value <b>%s</b> of the selectbox <b>%s</b> is selected
site.wtrm.command.checkIfElementIsNotSelected: Check if the value <b>%s</b> of the selectbox <b>%s</b> is <i>NOT</i> selected

site.screen.configure.title: Configure screen
site.screen.attr.scale: Scale
site.screen.attr.show_hostname: Show hostname
site.screen.attr.show_ipaddr: Show IP address
site.screen.attr.show_company: Show company
site.screen.attr.show_sla: Show SLA
site.screen.attr.show_services: Show services
site.screen.attr.show_service_summary: Show service summary
site.screen.attr.show_acknowledged: Show acknowledged services
site.screen.attr.sort_by_sla: Sort by SLA
site.screen.attr.bg_color: Background color
site.screen.attr.bg_color_ok: Background color OK
site.screen.attr.text_color_ok: Text color OK
site.screen.attr.bg_color_info: Background color INFO
site.screen.attr.text_color_info: Text color INFO
site.screen.attr.bg_color_warning: Background color WARNING
site.screen.attr.text_color_warning: Text color WARNING
site.screen.attr.bg_color_critical: Background color CRITICAL
site.screen.attr.text_color_critical: Text color CRITICAL
site.screen.attr.bg_color_unknown: Background color UNKNOWN
site.screen.attr.text_color_unknown: Text color UNKNOWN
site.screen.attr.bg_color_time: Background color TIME
site.screen.attr.text_color_time: Text color TIME

site.maintenance.text.tooltip: Enable or disable maintenance mode.
site.maintenance.text.enable: Enable the maintenance mode
site.maintenance.text.disable: Disable the maintenance mode
site.maintenance.desc.warning: Attention!<br/><br/>If you enable the maintenance mode then the complete notification system is disabled until you disable the maintenance mode manually.
site.maintenance.text.enabled: Attention!<br/><br/>The maintenance mode of Bloonix is active and the notification system is disabled. Please contact the administrator for more information.
